    InsertionSort e QuickSort
Esse experimento foi realizado em uma máquina com um processador: Intel(R) Core(TM) i5-3470 CPU @ 3.20GHz 3.60 GHz, uma placa de vídeo:GTX1650TI e uma memória RAM de 8,00GB.
			
InsertionSort(método de ordenação pouco eficiente): percorre um vetor de elementos da esquerda para a direita e à medida que avança vai ordenando os elementos à esquerda, sendo ele um método de ordenação estável.
	Os resultados da semente 13 foram variando de acordo com o tamanho do vetor, no caso deste método de ordenação só foram possíveis obter valores com quatro tamanhos diferentes de vetores sendo eles: 10.000, 30.000, 90.000 e 270.000, tendo eles recebido respectivamente os seguintes resultados: 55, 350, 3077 e 27386.

	Já na semente 21, os resultados também variaram de acordo com o aumento do tamanho dos vetores, no caso deste método de ordenação só foi possível obter valores com quatro tamanhos diferentes de vetores sendo eles: 10.000, 30.000, 90.000 e 270.000, tendo eles recebido respectivamente os seguintes resultados: 42, 88, 776 e 8035.

	Na semente 34, foram utilizados novamente neste caso os só foi possível obter valores com quatro tamanhos diferentes de vetores sendo eles: 10.000, 30.000, 90.000 e 270.000, variando os resultados de acordo com o aumento do tamanho dos vetores, tendo eles recebido respectivamente os seguintes resultados: 10, 88, 880 e 7712.

	Na semente 55, os resultados também variaram de acordo com o aumento do tamanho dos vetores, no caso deste método de ordenação foram utilizados os seguintes valores para os vetores: 10.000, 30.000, 90.000 e 270.000, tendo eles recebido respectivamente os seguintes resultados: 10, 89, 792 e 7713.

	Ocorrendo novamente o mesmo processo de ordenação, mas neste caso com a semente 89,  os resultados também variaram de acordo com o tamanho dos vetores, no caso deste método de ordenação foram utilizados quatro valores para os vetores: 10.000, 30.000, 90.000 e 270.000, tendo eles recebido respectivamente os seguintes resultados: 11, 86, 792 e 7615.

	Por fim, na semente 144, tendo o mesmo processo, os resultados também variaram de acordo com o tamanho dos vetores, no caso deste método de ordenação foram utilizados quatro valores para os vetores: 10.000, 30.000, 90.000 e 270.000, tendo eles recebido respectivamente os seguintes resultados: 11, 86, 841 e 27384.

QuickSort(método de ordenação mais eficientes): algoritmo de comparação com a estratégia de “divisão e conquista”, divide o problema de ordenar um conjunto com diversos itens em dois problemas menores, esses problemas menores são ordenados independentese os resultados são combinados para produzir a solução final.

•	Os resultados apresentados na semente 13 foram variando de acordo com o tamanho do vetor, contudo neste caso foi possível obter sete valores com tamanhos diferentes de vetores,  sendo eles: 10.000, 30.000, 90.000, 270.000, 810.000, 2.430.000 e 65.610.000, tendo eles recebido respectivamente os seguintes resultados: 4, 14, 29, 44, 104, 293 e 18951.

•	Na semente 21, da mesma forma os resultados variaram de acordo com o tamanho do vetor, contudo neste caso foi possível obter sete valores com tamanhos diferentes de vetores, sendo eles: 10.000, 30.000, 90.000, 270.000, 810.000, 2.430.000 e 65.610.000, tendo eles recebido respectivamente os seguintes resultados: 1, 2, 8, 28, 129, 272 e 15133.

•	Na semente 34, foram utilizados novamente sete tamanhos diferentes de vetores, sendo eles: 10.000, 30.000, 90.000, 270.000, 810.000, 2.430.000 e 65.610.000, com os resultados sempre variaram de acordo com o tamanho do vetor, e tendo eles recebido respectivamente os seguintes resultados: 1, 3, 9, 26, 130, 301 e 27323.

•	Na semente 55, os resultados também variaram de acordo com o aumento do tamanho dos vetores, neste caso foi possível obter setevalores com tamanhos diferentes de vetores,  sendo eles: 10.000, 30.000, 90.000, 270.000, 810.000, 2.430.000 e 65.610.000, tendo eles recebido respectivamente os seguintes resultados: 1, 2, 8, 27, 119, 287 e 19607.

•	Ocorrendo assim o mesmo processo na semente 89, da mesma forma os resultados também variaram de acordo com o aumento do tamanho dos vetores, sendo nesse caso valores com sete tamanhos diferentes de vetores,  sendo eles: 10.000, 30.000, 90.000, 270.000, 810.000, 2.430.000 e 65.610.000, tendo eles recebido respectivamente os seguintes resultados: 1, 3, 8, 25, 131, 263 e 29042.

•	E por fim, na semente 144 os resultados também variaram de acordo com o aumento do tamanho dos vetores, tendo obtido nesse caso, sete valores com tamanhos diferentes de vetores,  sendo eles: 10.000, 30.000, 90.000, 270.000, 810.000, 2.430.000 e 65.610.000, tendo eles recebido respectivamente os seguintes resultados: 1, 3, 12, 56, 116, 310 e 28627.

Observações:Um fator observado que deve-se levar em consideração é que mesmo com sementes diferentes houveram alguns tempos em milissegundos que apareceram mais de uma vez ao longo dos dois processos de ordenação, além disso outro fator que foi ressaltado ao longo de todo o processos mais especificamente do método de ordenação pouco eficiente, são as quantidades de números de vetores utilizados, pelo método de ordenação ser pouco eficiente não é recomendado que se utilize valores muito grandes.


